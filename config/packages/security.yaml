security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        app_user_provider:
            entity:
                class: App\Entity\User
                property: licenceNumber
    role_hierarchy:
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_FRAME, ROLE_ADMIN]
        ROLE_ADMIN: [ROLE_USER, ROLE_FRAME]
        ROLE_FRAME: [ROLE_USER]
        ROLE_USER:
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: users_in_memory
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/groupe, roles: ROLE_FRAME, requires_channel: https }
        - { path: ^/admin/seance, roles: ROLE_FRAME, requires_channel: https }
        - { path: ^/admin/calendrier, roles: ROLE_FRAME, requires_channel: https }
        - { path: ^/admin/sortie, roles: ROLE_FRAME, requires_channel: https }
        - { path: ^/admin/adherent, roles: ROLE_FRAME, requires_channel: https }
        - { path: ^/admin/rando, roles: ROLE_FRAME, requires_channel: https }
        - { path: ^/admin, roles: ROLE_ADMIN, requires_channel: https }
        - { path: ^/mon-compte, roles: ROLE_USER, requires_channel: https }
        - { path: '^/', roles: PUBLIC_ACCESS, requires_channel: https }
